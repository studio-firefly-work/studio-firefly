---
import PageLayout from '@/layouts/PageLayout.astro'
import Container from '@/components/atoms/Container.astro'
import Inner from '@/components/atoms/Inner.astro'
import FormLogin from '@/components/organisms/FormLogin'
import FormSignUp from '@/components/organisms/FormSignUp'

const seo: Theme.SEO = {
  title: 'ログイン',
  description: 'ログインページのdescriptionです',
  permalink: ['login'],
}
const apiBaseUrl = import.meta.env.PUBLIC_API_BASE_URL
---

<PageLayout {seo}>
  <Container>
    <Inner size="slim">
      <div role="tablist" class="tabs tabs-bordered tabs-lg grid-cols-2">
        <input type="radio" name="toggle-login-signup" role="tab" class="theme-text-md tab" aria-label="ログイン" checked="checked" />
        <div role="tabpanel" class="tab-content p-10">
          <FormLogin client:only="react" />
        </div>

        <input type="radio" name="toggle-login-signup" role="tab" class="theme-text-md tab" aria-label="新規登録" />
        <div role="tabpanel" class="tab-content p-10">
          <FormSignUp client:only="react" />
        </div>
      </div>
    </Inner>
  </Container>
</PageLayout>

<script define:vars={{ apiBaseUrl }}>
  document.addEventListener('astro:page-load', () => {
    const accessToken = getCookie('access_token')
    const refreshToken = getCookie('refresh_token')

    if (accessToken && refreshToken) {
      getUser()
    }
  })

  // ユーザー情報 取得
  async function getUser() {
    try {
      const res = await fetch(`${apiBaseUrl}/users/me/`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
      })

      if (!res.ok) {
        switch (res.status) {
          case 400:
            console.warn('リクエストが不正です。詳細:', await res.text())
            break
          case 401:
            console.warn('認証に失敗しました。ログイン情報を確認してください。')
            break
          case 404:
            console.warn('ユーザー情報が見つかりません。')
            break
          case 500:
            console.error('サーバー内部エラーが発生しました。後ほど再試行してください。')
            break
          default:
            console.warn('予期しないステータスコード:', res.status)
            break
        }
        return
      }

      // 認証成功
      console.info('認証に成功しました。ユーザーページにリダイレクトします。')
      window.location.href = '/user/'
    } catch (error) {
      console.error('予期しないエラーが発生しました:', error)
    }
  }

  // Cookieから指定された名前の値を取得
  function getCookie(name) {
    const value = `; ${document.cookie}`
    const parts = value.split(`; ${name}=`)
    if (parts.length === 2) return parts.pop().split(';').shift()
  }
</script>
