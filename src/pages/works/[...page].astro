---
import PageLayout from '@/layouts/PageLayout.astro'
import Container from '@/components/atoms/Container.astro'
import type { GetStaticPathsOptions } from 'astro'
import ButtonElement from '@/components/molecules/ButtonElement.astro'
import ButtonText from '@/components/molecules/ButtonText.astro'
import Inner from '@/components/atoms/Inner.astro'

const permalink = '/works'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const sites = [
    { name: 'サイト1', category: 'web', url: '#' },
    { name: 'サイト2サイト2サイト2サイト2サイト2サイト2サイト2', category: 'web', url: '#' },
    { name: 'サイト3', category: 'web', url: '#' },
    { name: 'サイト4', category: 'web', url: '#' },
    { name: 'サイト5', category: 'web', url: '#' },
    { name: 'サイト6', category: 'web', url: '#' },
    { name: 'サイト7', category: 'web', url: '#' },
    { name: 'サイト8', category: 'web', url: '#' },
    { name: 'サイト9', category: 'web', url: '#' },
    { name: 'サイト10', category: 'web', url: '#' },
    { name: 'サイト11', category: 'web', url: '#' },
    { name: 'サイト12', category: 'web', url: '#' },
    { name: 'サイト13', category: 'web', url: '#' },
    { name: 'サイト14', category: 'web', url: '#' },
    { name: 'サイト15', category: 'web', url: '#' },
  ]
  return paginate(sites, { pageSize: 12 })
}
const { page } = Astro.props
const totalPages = Math.ceil(page.total / page.size)

const p = {
  title: '',
  description: 'トップページのdescriptionです',
  canonical: page.currentPage == 1 ? `${Astro.site}works/` : `${Astro.site}works/${page.currentPage}/`,
  type: 'article',
}
---

<PageLayout {p}>
  <Container>
    <Inner>
      <ul class="grid grid-cols-1 gap-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
        {
          page.data.map((site) => (
            <li>
              <ButtonElement href={site.url} class="h-full flex-col items-start gap-2  p-4 ">
                <h2 class="grow">{site.name}</h2>
                <p>{site.category}</p>
              </ButtonElement>
            </li>
          ))
        }
      </ul>

      <nav class="flex justify-center gap-4" aria-label="Page navigation">
        {page.url.prev ? <ButtonText href={page.url.prev}>Previous</ButtonText> : null}

        {
          [...Array(totalPages)].map((_, index) => {
            const pageNum = index + 1
            const isCurrent = pageNum === page.currentPage
            const pageLink = pageNum === 1 ? permalink : `${permalink}/${pageNum}`

            return (
              <ButtonText href={pageLink} class={isCurrent ? 'pointer-events-none font-bold' : null}>
                {pageNum}
              </ButtonText>
            )
          })
        }

        {page.url.next ? <ButtonText href={page.url.next}>Next</ButtonText> : null}
      </nav>
    </Inner>
  </Container>
</PageLayout>
