---
export const prerender = false

import PageLayout from '@/layouts/PageLayout.astro'
import Container from '@/components/atoms/Container.astro'
import Inner from '@/components/atoms/Inner.astro'
import { FormUserEdit } from '@/components/organisms/FormUserEdit'

const seo: Theme.SEO = {
  title: 'お客様情報',
  description: 'お客様情報ページのdescriptionです',
  permalink: ['user'],
  noindex: true,
  nofollow: true,
}
---

<PageLayout {seo}>
  <Container>
    <Inner>
      <FormUserEdit client:only="react" />

      <button id="btn-logout" type="button" class="btn btn-neutral">ログアウト</button>

      <button id="btn-delete-user" type="button" class="btn btn-neutral">退会</button>
    </Inner>
  </Container>
</PageLayout>

<script>
  import { api } from '@/api'

  // 初期化関数
  const setClickEvent = () => {
    // ログアウトボタン
    const btnLogout = document.getElementById('btn-logout') as HTMLButtonElement
    btnLogout?.addEventListener('click', api.auth.logout)

    // 退会ボタン
    const btnDeleteUser = document.getElementById('btn-delete-user') as HTMLButtonElement
    btnDeleteUser?.addEventListener('click', api.user.deleteUser)
  }

  // ページ読み込み時に初期化
  const init = () => {
    if (window.location.pathname === '/user/') {
      setClickEvent()
    }
  }
  init()
  document.addEventListener('astro:after-swap', init)
</script>
