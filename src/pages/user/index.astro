---
export const prerender = false

import PageLayout from '@/layouts/PageLayout.astro'
import Container from '@/components/atoms/Container.astro'
import Inner from '@/components/atoms/Inner.astro'

const seo: Theme.SEO = {
  title: 'ユーザー',
  description: 'ユーザーページのdescriptionです',
  permalink: ['user'],
  noindex: true,
  nofollow: true,
}
const apiBaseUrl = import.meta.env.PUBLIC_API_BASE_URL
---

<PageLayout {seo}>
  <Container>
    <Inner>
      <button id="btn-logout" type="button" class="btn btn-neutral">ログアウト</button>
      <p id="user-id"></p>
      <p id="user-email"></p>
    </Inner>
  </Container>
</PageLayout>

<script is:inline data-astro-rerun define:vars={{ apiBaseUrl }}>
  // ユーザー情報 取得
  const getUser = async () => {
    try {
      const res = await fetch(`${apiBaseUrl}/users/me/`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include',
      })

      if (!res.ok) {
        window.location.href = '/login/'
        return
      }

      data = await res.json()
      document.getElementById('user-id').textContent = `ID: ${data.id}`
      document.getElementById('user-email').textContent = `Email: ${data.email}`
    } catch (error) {
      window.location.href = '/login/'
    }
  }

  // ログアウト
  const logout = async () => {
    try {
      const res = await fetch(`${apiBaseUrl}/auth/logout/`, {
        method: 'DELETE',
        credentials: 'include',
      })

      const data = await res.json()
      if (!res.ok) {
        console.error('ログアウトに失敗しました：' + data.message)
      } else {
        console.log('ログアウトに成功しました：' + data.message)
        window.location.href = '/login/'
      }
    } catch (error) {
      console.error('通信に失敗しました', error)
    }
  }

  // 初期化関数
  const initUserPage = () => {
    const ButtonLogout = document.getElementById('btn-logout')
    ButtonLogout.onclick = () => logout()
    getUser()
  }

  // ページ読み込み時に初期化
  initUserPage()
</script>
