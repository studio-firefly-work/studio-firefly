---
import BaseForm from '@/components/molecules/BaseForm/BaseForm.astro'

const fields = [
  {
    label: '名前',
    id: 'name',
    placeholder: '山田太郎',
    autocomplete: 'name',
    icon: 'mdi:user',
    validations: [{ pattern: /^(?!\s*$).+/, text: '名前は必須です' }],
    'x-on:change': '$refs.kana.dispatchEvent(new Event("input"))',
  },
  {
    label: 'フリガナ',
    id: 'kana',
    placeholder: 'ヤマダタロウ',
    validations: [
      { pattern: /^(?!\s*$).+/, text: 'カナは必須です' },
      { pattern: /^[ァ-ヶー]+$/, text: 'カタカナで入力してください' },
    ],
    'x-ref': 'kana',
  },
  {
    label: 'メールアドレス',
    id: 'email',
    type: 'email',
    placeholder: 'email@example.com',
    autocomplete: 'email',
    icon: 'mdi:email',
    validations: [
      { pattern: /^(?!\s*$).+/, text: 'メールアドレスは必須です' },
      { pattern: /.+@.+\..+/, text: 'メールアドレスの形式で入力してください' },
    ],
  },
  {
    label: '問い合わせ内容',
    id: 'contact',
    type: 'textarea',
    placeholder: 'お問い合わせ内容を入力してください。',
    validations: [{ pattern: /^(?!\s*$).+/, text: 'お問い合わせ内容は必須です' }],
  },
]
---

<BaseForm
  {fields}
  hx-post={`${import.meta.env.PUBLIC_API_BASE_URL}/mail/send/`}
  hx-trigger="submit"
  hx-swap="none"
  x-on:submit.prevent
>
  <button
    type="submit"
    class="btn btn-disabled btn-primary w-full"
    x-on:click.prevent="if (!Object.keys(errors).length) { if(confirm('本当に送信しますか？')) { $el.closest('form').dispatchEvent(new Event('submit', { cancelable: true, bubbles: true })); } }"
    x-bind:class="{'btn-disabled': Object.keys(errors).length}"
  >
    Submit
  </button>
</BaseForm>

<script is:inline data-astro-rerun type="module">
  import AutoKana from 'https://cdn.jsdelivr.net/npm/vanilla-autokana/+esm'
  AutoKana.bind('#name', '#kana', { katakana: true })
</script>
