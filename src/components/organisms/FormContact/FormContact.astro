---
import BaseForm from '@/components/molecules/BaseForm/BaseForm.astro'

const fields = [
  {
    label: '名前',
    value: '',
    id: 'name',
    type: 'text',
    placeholder: '山田太郎',
    autocomplete: 'name',
    icon: 'mdi:user',
  },
  {
    label: 'フリガナ',
    value: '',
    id: 'kana',
    type: 'text',
    placeholder: 'ヤマダタロウ',
  },
  {
    label: 'メールアドレス',
    value: '',
    id: 'email',
    type: 'email',
    placeholder: 'email@example.com',
    autocomplete: 'email',
    icon: 'mdi:email',
  },
  {
    label: '問い合わせ内容',
    value: '',
    id: 'contact',
    type: 'textarea',
    placeholder: 'お問い合わせ内容を入力してください。',
  },
]

const getUserData = `{
    name: '',
    kana: '',
    tel: '',
    email: '',
    errors: {},
    
    validateName() {
      if (!this.name) {
        this.errors.name = '※お名前は必須です。'
      } else {
        delete this.errors.name
      }
    },
    
    validateKana() {
      const kanaPattern = /^[ァ-ヶー]+$/
      if (!this.kana) {
        this.errors.kana = '※カナは必須です。'
      } else if (!kanaPattern.test(this.kana)) {
        this.errors.kana = 'カタカナを入力してください。'
      } else {
        delete this.errors.kana
      }
    },

    validateTel() {
      const telPattern = /^[0-9]{2,4}-?[0-9]{2,4}-?[0-9]{4}$/
      if (!this.tel) {
        this.errors.tel = "※電話番号は必須です。"
      } else if (!telPattern.test(this.tel)) {
        this.errors.tel = "有効な電話番号を入力してください。"
      } else {
        delete this.errors.tel
      }
    },
    
    validateEmail() {
      const emailPattern = /.+@.+\..+/
      if (!this.email) {
        this.errors.email = '※メールアドレスは必須です'
      } else if (!emailPattern.test(this.email)) {
        this.errors.email = 'メールアドレスの形式で入力してください'
      } else {
        delete this.errors.email
      }
    }
}`
---

<form
  hx-post={`${import.meta.env.PUBLIC_API_BASE_URL}/mail/send/`}
  hx-trigger="submit"
  hx-swap="none"
  x-data={getUserData}
>
  <dl class="list">
    <div>
      <dt>
        <label for="name">お名前</label>
      </dt>
      <dd>
        <input type="text" name="name" id="name" x-model="name" x-on:input="validateName" />
        <p x-show="errors.name" x-text="errors.name"></p>
      </dd>
    </div>
  </dl>
  <dl class="list">
    <div>
      <dt>
        <label for="kana">カナ</label>
      </dt>
      <dd>
        <input type="text" name="kana" id="kana" x-model="kana" x-on:input="validateKana" />
        <p x-show="errors.kana" x-text="errors.kana"></p>
      </dd>
    </div>
  </dl>
  <dl class="list">
    <div>
      <dt>
        <label for="tel">電話</label>
      </dt>
      <dd>
        <input type="text" name="tel" id="tel" x-model="tel" x-on:input="validateTel" />
        <p x-show="errors.tel" x-text="errors.tel"></p>
      </dd>
    </div>
  </dl>
  <dl class="list">
    <div>
      <dt>
        <label for="email">メールアドレス</label>
      </dt>
      <dd>
        <input type="text" name="email" id="email" x-model="email" x-on:input="validateEmail" />
        <p x-show="errors.email" x-text="errors.email"></p>
      </dd>
    </div>
  </dl>
  <button type="submit" class="btn btn-primary w-full">Submit</button>
</form>

<script is:inline data-astro-rerun type="module">
  import AutoKana from 'https://cdn.jsdelivr.net/npm/vanilla-autokana/+esm'
  AutoKana.bind('#name', '#kana', { katakana: true })
</script>
