---
import { tv } from 'tailwind-variants'
import Icon from '@/components/atoms/Icon.astro'

const { size, class: addClasses, ...rest } = Astro.props
const style = tv({
  base: `js-auth-button btn btn-ghost ${addClasses || ''}`,
})
---

<a class={style()} {...rest}>
  <Icon name="icon-user" />
</a>

<script>
  // APIエンドポイントにリクエストを送信してログイン状態を確認する関数
  const checkLoginStatus = async () => {
    try {
      const response = await fetch(`${import.meta.env.PUBLIC_API_BASE_URL}/auth/login/`, {
        method: 'GET',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
      })

      return response.ok
    } catch (error) {
      console.error('Error checking login status:', error)
      return false
    }
  }

  // 初期化関数
  const init = async () => {
    const authButtons = document.querySelectorAll('.js-auth-button') as NodeListOf<HTMLLinkElement>
    const isLoggedIn = await checkLoginStatus()
    const href = isLoggedIn ? '/user/' : '/login/'
    authButtons.forEach((button: HTMLLinkElement) => {
      button.href = href
    })
  }

  // ページ読み込み時に初期化
  init()
  document.addEventListener('astro:after-swap', init)
</script>
