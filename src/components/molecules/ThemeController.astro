---
import Icon from '@/components/atoms/Icon.astro'
---

<label class="btn btn-ghost swap swap-rotate">
  <input type="checkbox" id="theme-controller" class="theme-controller" value="synthwave" />
  <Icon name="icon-sun" class="swap-off" />
  <Icon name="icon-moon" class="swap-on" />
</label>

<script is:inline>
  // テーマを適用する関数
  const setTheme = (themeController) => {
    const savedTheme = localStorage.getItem('theme')
    if (savedTheme) {
      // ローカルストレージの設定を適用
      document.documentElement.setAttribute('data-theme', savedTheme)
      themeController.checked = savedTheme === 'dark'
    } else {
      // ハードウェアの設定を適用
      const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)').matches
      const systemTheme = prefersDarkScheme ? 'dark' : 'light'
      document.documentElement.setAttribute('data-theme', systemTheme)
      themeController.checked = systemTheme === 'dark'
    }
  }

  // テーマを切り替える関数
  const toggleTheme = (isDarkMode) => {
    const theme = isDarkMode ? 'dark' : 'light'
    document.documentElement.setAttribute('data-theme', theme)
    localStorage.setItem('theme', theme)
  }

  // 初期化関数
  const initThemeController = () => {
    const themeController = document.getElementById('theme-controller')
    setTheme(themeController)

    themeController.addEventListener('change', () => {
      toggleTheme(themeController.checked)
    })
  }

  // ページ読み込み時とページ遷移時に初期化
  initThemeController()
  document.addEventListener('astro:after-swap', initThemeController)
</script>
