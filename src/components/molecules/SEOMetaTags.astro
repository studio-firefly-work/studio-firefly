---
import { SEO } from 'astro-seo'
import { getSiteDataAll } from '@/constants/siteDatas'

interface Props {
  seo: Theme.SEO
}
const { seo } = Astro.props

const siteData = getSiteDataAll()

if (!seo.permalink) {
  // ホームの場合
  seo.schemaOrg = (seo.schemaOrg || []).concat(
    {
      '@context': 'https://schema.org',
      '@type': 'WebSite',
      name: siteData.name,
      url: Astro.site,
    },
    {
      '@context': 'https://schema.org',
      '@type': 'Organization',
      url: Astro.site,
      name: 'Example Corporation',
      description: 'The example corporation is well-known for producing high-quality widgets',
      email: '',
      telephone: '',
    }
  )
}

if (seo.breadcrumb) {
  // パンくずリストが有るページの場合
  const itemListElement: any[] = [
    {
      '@type': 'ListItem',
      position: 1,
      name: 'ホーム',
      item: Astro.site,
    },
  ]
  let path = ''

  Object.keys(seo.breadcrumb).forEach((key, index) => {
    path += `${key}/`
    itemListElement.push({
      '@type': 'ListItem',
      position: index + 2,
      name: seo.breadcrumb![key],
      item: new URL(path, Astro.site),
    })
  })

  seo.schemaOrg = (seo.schemaOrg || []).concat({
    '@context': 'https://schema.org',
    '@type': 'BreadcrumbList',
    itemListElement: itemListElement,
  })
}
---

<SEO
  title={seo.title}
  titleTemplate={'%s | ' + siteData.name}
  titleDefault={siteData.name}
  description={seo.description}
  canonical={seo.permalink ? new URL(`${seo.permalink.join('/')}/`, Astro.site) : Astro.site}
  noindex={seo.noindex ?? false}
  nofollow={seo.nofollow ?? false}
  charset="UTF-8"
  openGraph={{
    basic: {
      title: seo.title ?? siteData.name,
      type: seo.type ?? 'website',
      image: seo.image ?? Astro.url.origin + '/og_image.png',
      url: seo.permalink ? new URL(`${seo.permalink.join('/')}/`, Astro.site) : Astro.site,
    },
    optional: {
      description: seo.description,
      locale: 'ja_JP',
      siteName: siteData.name,
    },
    image: {
      type: 'image/png',
      width: 1200,
      height: 630,
      alt: seo.alt ?? 'デフォルトで設定したaltです',
    },
  }}
  extend={{
    link: [
      { rel: 'apple-touch-icon', sizes: '180x180', href: '/apple-touch-icon.png' },
      { rel: 'icon', type: 'image/png', sizes: '32x32', href: '/favicon-32x32.png' },
      { rel: 'icon', type: 'image/png', sizes: '16x16', href: '/favicon-16x16.png' },
      { rel: 'manifest', href: '/manifest.json' },
    ],
    meta: [{ name: 'viewport', content: 'width=device-width, initial-scale=1' }],
  }}
/>
{seo.schemaOrg && seo.schemaOrg.map((structuredData: []) => <script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)} />)}
